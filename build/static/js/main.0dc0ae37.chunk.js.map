{"version":3,"sources":["Components/header.js","Components/Firebase/index.js","Components/Home.js","Components/Questions/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","Header","classes","className","AppBar","position","Toolbar","Typography","variant","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","this","auth","db","firestore","id","question","category","optionA","optionB","optionC","optionD","correct","data","uid","Date","getTime","collection","doc","toString","set","then","alert","catch","error","Promise","resolve","onAuthStateChanged","Home","React","useState","setQuestion","answer","setAnswer","useEffect","a","firebase","get","querySnapshot","docs","map","console","log","fetchdata","style","color","ques","fontFamily","fontSize","Button","background","border","fontWeight","onClick","margin","width","MultilineTextFields","setId","setCategory","setOptionA","setOptionB","setOptionC","setOptionD","setCorrect","addQuestion","message","noValidate","autoComplete","TextField","label","multiline","placeholder","rowsMax","value","onChange","e","target","rows","onSubmit","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0dc0ae37.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport \"./Header.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  }\r\n \r\n  \r\n \r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Typography variant=\"h3\" className=\"title\">\r\n            CIVIL-MCQ\r\n          </Typography>\r\n          <h4 className=\"para\">Sections</h4>\r\n          <h4 className=\"para\">Paid-materials</h4>\r\n          <h4 className=\"para\">Contact</h4>\r\n          {/* <Button color=\"inherit\">Login</Button> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firebase-firestore\";\r\n\r\nconst config = {\r\n   // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\n    apiKey: \"AIzaSyCQvY05zxNwBf6FOeQkccGbOOhIY1UIIJ0\",\r\n    authDomain: \"civil-mcq-45d89.firebaseapp.com\",\r\n    projectId: \"civil-mcq-45d89\",\r\n    storageBucket: \"civil-mcq-45d89.appspot.com\",\r\n    messagingSenderId: \"948388795290\",\r\n    appId: \"1:948388795290:web:34a69ce8d39a5240746023\",\r\n    measurementId: \"G-S76Y78YD7G\"\r\n  \r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n    this.auth = app.auth();\r\n    this.db = app.firestore();\r\n  }\r\n\r\n  dbreturns() {\r\n    return this.db;\r\n  }\r\n\r\n//   login(email, password) {\r\n//     return this.auth.signInWithEmailAndPassword(email, password);\r\n//   }\r\n\r\n//   logout() {\r\n//     return this.auth.signOut();\r\n//   }\r\n\r\n//   async register(name, email, password) {\r\n//     await this.auth.createUserWithEmailAndPassword(email, password);\r\n//     return this.auth.currentUser.updateProfile({\r\n//       displayName: name,\r\n//     });\r\n//   }\r\n\r\n  addQuestion(\r\n    id,\r\n    question,\r\n    category,\r\n    optionA,\r\n    optionB,\r\n    optionC,\r\n    optionD,\r\n    correct\r\n  ) {\r\n    const data = {\r\n        id,\r\n    question,\r\n    category,\r\n    optionA,\r\n    optionB,\r\n    optionC,\r\n    optionD,\r\n    correct,\r\n    uid: new Date().getTime(),\r\n    };\r\n\r\n    // adding data here\r\n    this.db\r\n      .collection(\"questions\")\r\n      .doc(data.uid.toString())\r\n      .set(data)\r\n      .then(() => {\r\n        // NotificationManager.success(\"A new user has been added\", \"Success\");\r\n        alert(\"Sucess : New Question Added\");\r\n        // window.location = \"/\";\r\n      })\r\n      .catch((error) => {\r\n        // NotificationManager.error(error.message, \"Create user failed\");\r\n        alert(\"Failure : New Question NOT Added\" + \"  \" + error);\r\n        // this.setState({ isSubmitting: false });\r\n      });\r\n  }\r\n\r\n  \r\n\r\n  isInitialized() {\r\n    return new Promise((resolve) => {\r\n      this.auth.onAuthStateChanged(resolve);\r\n    });\r\n  }\r\n\r\n//   getCurrentUsername() {\r\n//     return this.auth.currentUser && this.auth.currentUser.email;\r\n//   }\r\n\r\n  // async getCurrentUserDetail(email) {\r\n  //   await this.db\r\n  //     .collection(\"users\")\r\n  //     .where(\"email\", \"==\", `${email}`)\r\n  //     .get()\r\n  //     .then((querySnapshot) => {\r\n  //       const data = querySnapshot.docs.map((doc) => doc.data());\r\n  //       console.log(data);\r\n  //       return data;\r\n  //     });\r\n  // }\r\n}\r\n\r\nexport default new Firebase();","import React ,{useEffect} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport firebase from \"./Firebase/index\";\r\nimport \"./Home.css\"\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\n\r\nexport default function Home() {\r\n    const [question,setQuestion] = React.useState([]);\r\n    const [answer,setAnswer]=React.useState(null);\r\n    var data;\r\n    useEffect(() => {\r\n\r\n        const fetchdata = async () => {\r\n           await firebase.db\r\n            .collection(\"questions\")\r\n            .get()\r\n            .then((querySnapshot) => {\r\n               data = querySnapshot.docs.map((doc) => doc.data());\r\n               console.log(data);\r\n               console.log(data[0]);\r\n            //   console.log(RandomNumber);\r\n               setQuestion(data);\r\n            });\r\n        };\r\n          fetchdata();\r\n        \r\n    },[]);\r\n\r\n    return (\r\n        \r\n       <> \r\n       \r\n       <h2 className=\"d-flex justify-content-center\" style={{color:\"blue\"}}>Building-Materials</h2>\r\n       <br></br>\r\n      {\r\n          \r\n         question && question.map(ques=>{\r\n          return(\r\n            <div className=\"ques-container\">\r\n              <p>{ques.id}. {ques.question}</p>\r\n             \r\n              <p><span className=\"question-style\">A.</span> <span>{ques.optionA}</span></p>\r\n              <p><span className=\"question-style\">B.</span> <span>{ques.optionB}</span></p>\r\n              <p><span className=\"question-style\">C.</span> <span>{ques.optionC}</span></p>\r\n              <p><span className=\"question-style\">D.</span> <span>{ques.optionD}</span></p>\r\n              <br>\r\n              </br>\r\n              {answer===ques.id?<p style={{color:\"green\",fontFamily:\"Montserrat\",fontSize:\"Larger\"}}>{ques.correct}</p>:<></>}\r\n              <Button variant=\"outlined\" style={{background:\"white\",color:\"blue\",border:\"1\",fontWeight:\"bold\"}} onClick={()=>{setAnswer(ques.id)}}>View Answer</Button>\r\n              <br></br>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n   </>\r\n \r\n            \r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from '@material-ui/core';\r\nimport firebase from \"../Firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function MultilineTextFields() {\r\n  const classes = useStyles();\r\n\r\n\r\n// id,\r\n// question,\r\n// category,\r\n// optionA,\r\n// optionB,\r\n// optionC,\r\n// optionD,\r\n// correct\r\n  const [id, setId] = React.useState(\"\");\r\n  const [question, setQuestion] = React.useState(\"\");\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [optionA, setOptionA] = React.useState(\"\");\r\n  const [optionB, setOptionB] = React.useState(\"\");\r\n  const [optionC, setOptionC] = React.useState(\"\");\r\n  const [optionD, setOptionD] = React.useState(\"\");\r\n  const [correct, setCorrect] = React.useState(\"\");\r\n\r\n\r\n\r\n  async function onSubmit() {\r\n    try {\r\n      await firebase.addQuestion(\r\n        id,\r\n    question,\r\n    category,\r\n    optionA,\r\n    optionB,\r\n    optionC,\r\n    optionD,\r\ncorrect\r\n      );\r\n      setId(\"\");\r\n      \r\n      \r\n      setQuestion(\"\");\r\n      setCategory(\"\");\r\n      setOptionA(\"\");\r\n      setOptionB(\"\");\r\n      setOptionC(\"\");\r\n      setOptionD(\"\");\r\n      setCorrect(\"\");\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n\r\n\r\n  }\r\n \r\n\r\n  \r\n\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <div>\r\n      <TextField\r\n          id=\"standard-multiline-flexible\"\r\n          label=\"Multiline\"\r\n          multiline\r\n          placeholder=\"Id\"\r\n          rowsMax={4}\r\n          value={id}\r\n          onChange={(e)=>{setId(e.target.value)}}\r\n        />\r\n        <TextField\r\n          id=\"standard-multiline-static\"\r\n          label=\"Multiline\"\r\n          multiline\r\n          rows={4}\r\n          placeholder=\"Question\"\r\n          value={question}\r\n          onChange={(e)=>{setQuestion(e.target.value)}}\r\n        />\r\n         <TextField\r\n          id=\"standard-multiline-flexible\"\r\n          label=\"Multiline\"\r\n          multiline\r\n          placeholder=\"Category\"\r\n          rowsMax={4}\r\n          value={category}\r\n          onChange={(e)=>{setCategory(e.target.value)}}\r\n        />\r\n        \r\n      </div>\r\n      <div>\r\n        <TextField\r\n          id=\"filled-multiline-flexible\"\r\n          label=\"Multiline\"\r\n          multiline\r\n          rowsMax={4}\r\n          placeholder=\"OptionA\"\r\n          value={optionA}\r\n          onChange={(e)=>{setOptionA(e.target.value)}}\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          id=\"filled-textarea\"\r\n          label=\"Multiline Placeholder\"\r\n          placeholder=\"OptionB\"\r\n          multiline\r\n          value={optionB}\r\n          onChange={(e)=>{setOptionB(e.target.value)}}\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          id=\"filled-multiline-static\"\r\n          label=\"Multiline\"\r\n          multiline\r\n          rows={4}\r\n          placeholder=\"optionc\"\r\n          value={optionC}\r\n          onChange={(e)=>{setOptionC(e.target.value)}}\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          id=\"filled-multiline-static\"\r\n          label=\"Multiline\"\r\n          multiline\r\n          rows={4}\r\n          placeholder=\"optiond\"\r\n          value={optionD}\r\n          onChange={(e)=>{setOptionD(e.target.value)}}\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          id=\"filled-multiline-static\"\r\n          label=\"Multiline\"\r\n          multiline\r\n          rows={4}\r\n          placeholder=\"correct answer\"\r\n          value={correct}\r\n          onChange={(e)=>{setCorrect(e.target.value)}}\r\n          variant=\"filled\"\r\n        />\r\n      </div>\r\n      <Button onClick={()=>{onSubmit()}}>ADD</Button>\r\n    </form>\r\n  );\r\n}","\r\nimport './App.css';\r\nimport Header from './Components/header';\r\nimport Home from \"./Components/Home\"\r\nimport MultilineTextFields from \"./Components/Questions\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <Header />\r\n        <Home />\r\n      </Route>\r\n\r\n      <Route path=\"/add\">\r\n        <MultilineTextFields />\r\n      </Route>\r\n      \r\n      \r\n    </Switch>\r\n  </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}